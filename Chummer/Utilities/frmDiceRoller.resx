<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        2f8tL9n/JSfX/6Oj7//v8Pz/o6Pv/yQm1/8pK9j/c3Xl/ykr2P8kJtf/o6Pv/+/w/P+jo+//JSfX/ywu
        2f8lJ9f/oqPu/+/w/P+io+7/JSfZ/0FD4f8ODqz/AAAAFv///wAAAAAWDQ2s/0lM3/8rLdX/LS/V/y0v
        1f8tL9X/LS/V/y0v1f8qLNT/IyXT/yAi0v8jJdP/KCrU/ycp0/96e+X/JynT/ygq1P8jJdP/ICLS/yMl
        0/8qLNT/KizU/x0g0v/s6/z/4OD5/+zr/P8cHtL/R0nf/w0NrP8AAAAW////AAAAABYNDaz/UVLd/ygq
        0v8pLNL/KizS/yos0v8qLNL/KizS/yks0v8oKtL/KCrS/ygq0v8oKtL/JCbQ/4KD5P8jJtD/KCrR/ycp
        0f8mKNH/JynR/ykr0v8nKtL/GhzP/+vs+//f4Pn/6+z7/xgaz/9OT9z/DQ2s/wAAABb///8AAAAAFgwM
        rP9YWdz/JSbP/ycoz/8oKc//KCnP/ygpz/8oKc//KCnP/ygpz/8oKc//KCnP/ycoz/8hIs3/iorl/yAh
        zf8jJM7/Hh/N/xobzP8eH83/JCXO/yYnz/8eH83/n6Dq/+/v+/+eoOr/GxzN/1dY3P8MDKz/AAAAFv//
        /wAAAAAWDAys/2Fh2/8iIsr/JSXL/yQky/8kJMr/JCTL/yYmy/8mJsv/JibL/yYmy/8mJsv/JCTL/x4e
        yf+Skub/HR3J/xoayP+en+j/8O/7/56f6P8bG8j/JCTK/yMiyv8cHMn/GBjI/xsbyP8fHsn/YWDb/wwM
        rP8AAAAW////AAAAABYLC6z/aWnb/x8ex/8fHsf/GRjF/xYVxP8ZGMX/IB/H/yQiyP8kI8j/JCPI/yQj
        yP8iIcj/GxrG/5ua5v8ZGMX/ExHD/+vr+v/e3vf/6+v6/xQTxP8hIMf/IyLI/yEgx/8gH8f/IB/H/x4d
        x/9oadv/Cwus/wAAABb///8AAAAAFgsLrP9wb9z/GhnD/xUUwv+cnOX/7+/6/5yc5f8WFcL/Hx7F/yEg
        xf8hIMX/ISDF/x8exf8YF8L/oqHn/xUUwv8PDsD/6+z5/9/f9v/r7Pn/ERDB/x4dxP8dHMT/FhXC/xMR
        wf8VFML/GBfD/29u3P8LC6z/AAAAFv///wAAAAAWCgqt/3h22/8WFb//DQ28/+rq+v/e3vb/6ur6/w4O
        vP8cG8D/Hx7B/x8ewf8fHsH/HBvA/xMSvv+qqef/EhG9/xEQvf+bmuP/7u77/5yb5P8UE77/HBvA/xQT
        vv+bnOP/7u77/5qa4/8ODbz/dnXa/woKrf8AAAAW////AAAAABYKCq3/gH/b/xQRu/8LCbn/6+r5/97d
        9f/r6vn/DAq5/xoYvf8cGr7/Gxm9/xkXvP8UErv/Cge3/66t5v8JB7f/EA65/w4Muf8NC7n/EhC7/xkX
        vf8aGL3/DAq5/+rq+f/e3fX/6ej4/wUDt/9+fdr/Cgqt/wAAABb///8AAAAAFgkJrP+Kid7/EhC6/w8N
        uf+bmeH/7+76/5uZ4f8QDrr/GRe8/xgWu/8UEbr/GRe6/2Bf0f+wsvH/xMj9/7Cy8f9gXtH/FxW6/xEP
        uf8WFLv/Ghi8/xkXvP8LCbj/6+r5/97d9f/p6fn/AwG2/4eG3f8JCaz/AAAAFv///wAAAAAWCAis/5WU
        4v8TEbr/FxW7/xEPuv8NC7j/Dw25/xQSuv8TEbr/Ih+9/3Bu2P+lpu7/o6f3/19j7P8qMOb/X2Ps/6On
        9/+lpu7/cG7Y/yIfvf8UErr/FhS7/w8Nuf+amOH/7+76/5mX4f8IBrf/lJPh/wgIrP8AAAAW////AAAA
        ABYHB6z/n57k/xIQuv8ZF7z/GRe8/xYUu/8TEbr/KSe+/2dl1f+kpfD/gITu/0lO5/8tMeH/MDTh/zE1
        4f8wNOH/LTHh/0lO5/+AhO7/pKXw/2dl1f8pJ77/EQ65/w0LuP8MCrj/Dw25/w4Muf+eneT/Bwes/wAA
        ABb///8AAAAAFgcHq/+pqOf/EA66/xYUu/8VErr/LyzA/29v2/+Qke3/aGzn/zc63v8sL93/LjHd/zAz
        3f8xNN3/MjXd/zE03f8wM93/LjHd/ywv3f83Ot7/aGzn/5CR7f9vb9r/LSvA/xMRuf8UErr/EA66/6mo
        5/8HB6v/AAAAFv///wAAAAAVBwer/7Wz6v8MCrj/NzXE/2tt2v97fuf/Ulbi/y0x2f8qLdn/LC/Z/y0x
        2f8uMdn/LTDZ/yww2f8sL9n/LDDZ/y0w2f8uMdn/LTHZ/ywv2f8qLdn/LTHZ/1JW4v97fuf/a23a/zc1
        xP8MCrj/tbPq/wcHq/8AAAAV////AAAAAA0JCaz/mZjj/15e1f9hZOH/P0Ha/yYo1P8oKtT/KizU/yst
        1P8sLtT/Ky3U/ygq0/8hI9H/HB7Q/xsd0P8cHtD/ISPR/ygq0/8rLdT/LC7U/yst1P8qLNT/KCrU/yYo
        1P8/Qdr/YWTh/15e1f+ZmOP/CQms/wAAAA7///8AAAAABA0NqbInJ7f/VVbW/1RV3P83N9X/JSbQ/yco
        0P8oKdD/KSrQ/ykq0P8nKND/ICHO/7/A8f/t7fv/6un7/+3t+/+/wPH/ICHO/yco0P8pKtD/KSrQ/ygp
        0P8nKND/JSbQ/zc31f9UVdz/VVbW/ycnt/8NDavGAAAABP///wAAAAAAAAAAAg4NpWEMDKrRGRmz/zs7
        xv9QUNX/OTrR/ycozf8lJMz/JSXM/yQkzP8cHMr/vr7v/+7u+//q6vv/7u77/76+7/8cHMr/JCTM/yUl
        zP8lJMz/JyjN/zk60f9QUNX/OzvG/xkZs/8MDKrRDg2lYQAAAAIAAAAA////AAAAAAAAAAAAAAAAAAAA
        AAAMDIYNDQ2mhRAQrfYnJ7r/OjrH/zk5zv8mJsj/IiLH/x8fxv8YGMT/ExPD/xERw/8TE8P/GBjE/x8f
        xv8iIsf/JibI/zk5zv86Osf/Jye6/xAQrfYNDaaFDAyGDQAAAAAAAAAAAAAAAAAAAAD///8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQ4OokwPD6mqGBiy/ygnvP8rKsP/IyLF/x4dw/8eHcP/HRzD/x4d
        w/8eHcP/IyLF/ysqw/8oJ7z/GBiy/w8PqaoODqJMAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        /wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACDw+lcxISruMZGLL/Hh27/x4b
        v/8eG8D/Hhu//x4du/8ZGLL/EhKu4w8PpXMAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQ8P
        miEREaqsERGu/xERrv8REa7/ERGqrA8PmiEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP/4D///4AP//4AA//4AAD/4AAAP4AAAA4AAAACAAAAAgAAAAIAA
        AACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAA
        AACAAAAAwAAAAfgAAA/+AAA//8AB///wB///////
</value>
  </data>
</root>