<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tlpKarmaCostsList.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMwAAADMAAAAzAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHt5dwB7eXcAAAAAJAAAACN+enYAVW+DAFhtfv9KZ4T/UJHa/wAA
        ADOBeG8AAAAALwAAACN7eXcAe3l3AHt5dwB7eXcAAAAAI21racFsamm/AAAALwAAADNch6T/gKi3/4/W
        //8yap7/AAAAM3hzbu9tamnAAAAAJHt5dwB7eXcAe3l3AG9ta7+hn53/npya/3Fua+91bmf/QrL4/4rm
        //+A1P//Epv//zNqn/+toZb/pqGd/3Jwbb17eXcAe3l3AH17eQB6eHbtn52b/9/d2/+4trP/3tnV/+TY
        z/8jdMf/QMb//yur//8Wnf//Mmmd/66imP99eXWtfXt4AH17eAB+fHoAfHp4AHZ1cv63s7P/0tDP/9LQ
        zv/Y0s//5dfN/yt6yv9Gyf//LKz//xSc//8taqP/AAAAM3x7dgB7fHMAAAAAMwAAADN4dnT/0tDO/87M
        yv+/vbr/k5GO/5SOif+klov/Ln3N/0PJ//8hq///g7DY/395cv8AAAAzoGrVAIF/ff98enj/nZuZ/8zJ
        yP/Mycj/k5GP/3p4dpx/fXoif3p1nKOWjP8les7/r9zx/5KIgP/Bv7j/d3xu/wAAADOBf33/4+Hf/9za
        2P/GxcL/yMbE/4+Ni/9IR0Y9AAAAB0lIRj2VkIv/0srE/4Z/ef/r6OT/iYyC/7p6tv+Yacr/hIKA/4B+
        fP+UlJL/0M7M/8PAv/+TkY//cnFvrTo5OE5ycW+tlZOQ/8bCwf/T0c7/gYN8/+Oy4f/Llsb/rn3O/4aE
        ggCFg4EAgH58/9rZ2P++u7n/vLm3/5SRjv+Sj43/lJGP/7OysP+/u7n/2tnX/3t9df/Eitn/v4rV/617
        zQCFg4EAAAAAI4J/fe+sqqj/x8XD/7u4t/+6t7b/u7i3/7u4t/+7uLf/x8XD/6yqp/99fnfqAAAAIsOK
        2gCwetMAjIqIAIKAfrqkoqD/2tjX/8bEwv/k4+H/29nX/8K/vv/X1dT/5OPh/8XEwv/a2Nf/oqKd/31/
        d7iHioAAiIuBAI2LiQCLiYeysrGv/6+urP+Fg4HrhoSC/5qYl/+8urf/mpiX/4aEgv+Fg4H+r66s/7Gx
        rv+KiYayjIuIAI2LiACNi4kAjIqIAI2LibKNi4mvi4mHAIuJhwCLiYf/6efn/4uJh/+LiYcAjYuJAIyK
        iO2Ni4mwjIqIAI2LiQCNi4kAjYuJAI2LiQCPjYsAj42LAIyKiACSkI4AkI6M/4+Ni/+Qjoz/kpCOAI+N
        iwCPjYsAj42LAI2LiQCNi4kAjYuJAPx/AADMJwAAgAMAAIADAACAAwAAwAMAAAABAAAAAAAAAAAAAAAA
        AADAAQAAgAMAAIADAACAAwAAzGcAAPx/AAAoAAAAIAAAAEAAAAABACAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAwAAAAJAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAIwAA
        ACUAAAAXAAAACQAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAlqcHXtNlJkiQAAAD0AAAApAAAAFgAAAAkAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAkhqgXFeUkv/PlZp+xpIa4oAAAA8AAAAKAAAABgAAAANAAAABAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAE0VkePdidoH/b77u/ypun/gQOVmKAAAAQQAAACsAAAANAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABAAAAA0AAAAOAAAABQAAAAAAAAAVRmyDxnLG8v+o5P//gc38/0uW0f82bqH/b2JVxQAA
        ACAAAAAGAAAABQAAAA4AAAANAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAMAAAAVAAAALgAAADIAAAAaAAAABwAAABlzaWL/c6bJ//L///+p3vv/Vrb8/xKb
        //85bp//AAAAPQAAACAAAAAfAAAAMgAAAC4AAAAVAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAADAAAAFAAAADJkYmHHb25r9AAAADoAAAAjAAAALnBrZv+ctcb/d7rd/+v7
        //9dvP//E5f//xac//88bpz/AAAARwAAAERxbmrzZGJhxwAAADIAAAAUAAAAAwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAABUAAAAyYF5dwZuZl/+bmZf/aWdl6gAAAElEQUCCcm9r/+ri
        2/8accf/d9v//932//9ivf//FZj//xec//85bZ7/dGdc46Cblv+cmpf/YF5dwQAAADIAAAAVAAAABAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANAAAALmJgXsGYl5X/4+Lg/+Lh3/+2tbP/amhm/3h3
        df/My8j/39zX/+fa0v8ccMX/edz//9/2//9ivf//FZj//xSb//8xaJv/9ene/+rm4f+ZmJb/YmBewQAA
        AC4AAAANAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5sami/nZ2b/+Tj4f/X1dT/1tPS/93c
        2v/R0M7/4eDe/9nX1v/W09H/2tTQ/+XXzv8dcMX/edz//9/2//9ivf//FJf//xGY//8rYpb/7N/W/+vn
        4v+enZv/bGppvwAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABXZzcfGfnZv/4+Lg/9TS
        0P/Rz87/0dHP/9XU0v/S0M//0c/O/9HPzv/Sz87/19HO/+HVzP8dcMX/edz//9/2//9ivf//FJf//xGX
        //8rYpb/9urf/6Sfmv92dHHvAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAADAAAAC3Fu
        bOS5uLb/3t3b/9DOzP/Pzcz/z83M/8/NzP/Pzcz/z83M/8/NzP/Qzcz/1c/M/9/Tyv8dcMX/edz//9/2
        //9ivf//FJf//xGY//8wZ5v/e25j4QAAACIAAAAIAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAEAAA
        ABsAAAAiAAAANXBta//U1NL/09HQ/83Lyf/Ny8n/zcvI/87Myv/X1tT/393c/+De3f/g3tz/3NjT/97S
        yP8dcMb/edz//9/2//9ivf//FJf//xSb//81bKD/AAAAPwAAACQAAAAPAAAABAAAAAAAAAAAAAAAAAAA
        AA0FBQUuQD8+bDU0M2hfXVyrnp2b/9/e3P/Lycf/y8nH/8vJxv/Pzcz/4N/f/8LBv/+XlZP/kY+N/5eV
        k//Dwr//5uLe/9/Syv8dccb/etz//9/2//9ivf//FJj//xSb//81baH/PTgzaQAAACwAAAANAAAAAAAA
        AAAAAAAAAAAAFXBubcJ5d3X/d3Ry/3Jwbv/S0c//0tDO/8nFxf/JxcX/ysjG/+Lg3/+gnpv/dXNx4W9s
        akZycG4zb2xqRnVzceGhnpv/5+Le/9nNw/8dccb/etz//9/2//9ivf//FJj//xGc//8ubaj/dXBrwwAA
        ACAAAAAGAAAAAAAAAAAAAAAWe3h2/+7u7f/q6ej/5+fm/+Ti4f/Gw8L/x8TD/8bDwv/T09H/xsTC/3Zz
        ceIAAAAIAAAAAAAAAAAAAAAAAAAACXZzceLHxML/2dXQ/9XIv/8ecsf/et3//972//9fv///Cpr//4t9
        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
</value>
  </data>
</root>